/* Sweep
 by BARRAGAN <http://barraganstudio.com>
 This example code is in the public domain.

 modified 8 Nov 2013
 by Scott Fitzgerald
 http://www.arduino.cc/en/Tutorial/Sweep
*/

#include <Servo.h>

Servo myservo;  // create servo object to control a servo
Servo myservo1;  // create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;    // variable to store the servo position
int pos1 = 0;

void setup() {
  myservo.attach(9);  // attaches the servo on pin 9 to the servo object
  myservo1.attach(10);  // attaches the servo on pin 9 to the servo object
}

void loop() {
  // skull start: servo1 position 0 delay 45
  for (pos1 = 0; pos1 <= 75; pos1 += 1) { // goes from 0 degrees to 90 degrees
    // in steps of 1 degree
    myservo1.write(pos1);              // tell servo to go to position in variable 'pos'
    delay(45);                       // waits 45ms for the servo to reach the position
  }  
  // jaw start: servo0 position 0 -> position 30 -> delay 45
  for (pos = 0; pos <= 30; pos += 1) { // goes from 0 degrees to 30 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(45);                       // waits 45ms for the servo to reach the position
  }
  // jaw end: servo0 position 30 -> position  0 -> delay 45
  for (pos = 30; pos >= 0; pos -= 1) { // goes from 30 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(45);                       // waits 45ms for the servo to reach the position
  }
  // skull end: servo 1 position 90 delay 45
  for (pos1 = 75; pos1 <= 0; pos1 -= 1) { // goes from position 75 -> 0 degrees
    // in steps of 1 degree
    myservo1.write(pos1);              // tell servo to go to position in variable 'pos'
    delay(45);                       // waits 45ms for the servo to reach the position
  }
  delay(10000); // a delay before it starts the whole thing over. N.B. Tweak this for random delay for creep factor?
  return;
}
